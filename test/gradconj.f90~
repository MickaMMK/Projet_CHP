module grad_conj
  implicit none

  integer, parameter :: wp = kind(1.0D0)

contains

  subroutine grad_conj_opt(A,X,B)
    implicit none

    real(wp), dimension(:,:), intent(in)                  :: A
    real(wp), dimension(:), intent(in)                    :: B
    real(wp), dimension(size(A,1)), intent(out)           :: X
    real(wp), dimension(:,:), allocatable                 :: C
    real(wp), dimension(:), allocatable                   :: G, G_new, H, AH, CG
    real(wp)                                              :: rho, delta, eps, test
    integer                                               :: i, j, n

    n = size(A,1)

    allocate(C(n,n), G(n), G_new(n), H(n), AH(n), CG(n))

    C = 0._wp
    X = 1.0_wp

    do i = 1, n
       C(i,i) = 1._wp !/ A(i,i)
    enddo

    G = matmul(A,X) - B
    H = -matmul(C,G)

    i = 0
    eps = 0.0001_wp
    test = 1._wp

    do while(eps<test)

       i = i + 1

       X = X + alpha*w
       r = B - matmul(A,X)
       err = dot_product

       if(i==1000) then
          test = 0._wp
       endif

    enddo

  end subroutine grad_conj_opt

end module grad_conj


